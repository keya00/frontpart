[{"/Users/keyakhandelwal/Documents/react-login-1/ffront/src/index.js":"1","/Users/keyakhandelwal/Documents/react-login-1/ffront/src/App.js":"2","/Users/keyakhandelwal/Documents/react-login-1/ffront/src/components/Login.js":"3","/Users/keyakhandelwal/Documents/react-login-1/ffront/src/components/SignUp.js":"4","/Users/keyakhandelwal/Documents/react-login-1/ffront/src/components/toast.js":"5","/Users/keyakhandelwal/Documents/react-login-1/ffront/src/components/validate.js":"6"},{"size":263,"mtime":1680945101654,"results":"7","hashOfConfig":"8"},{"size":446,"mtime":1681228512461,"results":"9","hashOfConfig":"8"},{"size":3328,"mtime":1681230266444,"results":"10","hashOfConfig":"8"},{"size":7053,"mtime":1681228987019,"results":"11","hashOfConfig":"8"},{"size":811,"mtime":1680945101653,"results":"12","hashOfConfig":"8"},{"size":1202,"mtime":1680945101654,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"oxgygq",{"filePath":"17","messages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"21","messages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"16"},{"filePath":"24","messages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"/Users/keyakhandelwal/Documents/react-login-1/ffront/src/index.js",[],["28","29"],"/Users/keyakhandelwal/Documents/react-login-1/ffront/src/App.js",[],"/Users/keyakhandelwal/Documents/react-login-1/ffront/src/components/Login.js",["30","31","32"],"/Users/keyakhandelwal/Documents/react-login-1/ffront/src/components/SignUp.js",["33","34","35"],"import React, { useEffect, useState } from \"react\";\n//Icon\nimport userIcon from \"../img/user.svg\";\nimport emailIcon from \"../img/email.svg\";\nimport passwordIcon from \"../img/password.svg\";\nimport logo from \"../img/logo1.png\";\nimport alogo from \"../img/logo2.png\";\n// Validate\nimport { validate } from \"./validate\";\n// Styles\nimport styles from \"./SignUp.module.css\";\nimport \"react-toastify/dist/ReactToastify.css\";\n// Toast\nimport { ToastContainer, toast } from \"react-toastify\";\nimport { notify } from \"./toast\";\n//\nimport { Link } from \"react-router-dom\";\n// Axios\nimport axios from \"axios\";\n\nconst SignUp = () => {\n  const [data, setData] = useState({\n    name: \"\",\n    email: \"\",\n    password: \"\",\n    confirmPassword: \"\",\n    IsAccepted: false,\n  });\n\n  const [errors, setErrors] = useState({});\n  const [touched, setTouched] = useState({});\n\n  useEffect(() => {\n    setErrors(validate(data, \"signUp\"));\n  }, [data, touched]);\n\n  const changeHandler = (event) => {\n    if (event.target.name === \"IsAccepted\") {\n      setData({ ...data, [event.target.name]: event.target.checked });\n    } else {\n      setData({ ...data, [event.target.name]: event.target.value });\n    }\n  };\n\n  const focusHandler = (event) => {\n    setTouched({ ...touched, [event.target.name]: true });\n  };\n\n  const submitHandler = (event) => {\n    // event.preventDefault();\n    // if (!Object.keys(errors).length) {\n    //   // Pushing data to database usuing PHP script\n    //   const urlApi = `https://lightem.senatorhost.com/login-react/index.php?email=${data.email.toLowerCase()}&password=${\n    //     data.password\n    //   }&register=true`;\n    //   const pushData = async () => {\n    //     const responseA = axios.get(urlApi);\n    //     const response = await toast.promise(responseA, {\n    //       pending: \"Check your data\",\n    //       success: \"Checked!\",\n    //       error: \"Something went wrong!\",\n    //     });\n    //     if (response.data.ok) {\n    //       notify(\"You signed Up successfully\", \"success\");\n    //     } else {\n    //       notify(\n    //         \"You have already registered, log in to your account\",\n    //         \"warning\"\n    //       );\n    //     }\n    //   };\n    //   pushData();\n    // } else {\n    //   notify(\"Please Check fileds again\", \"error\");\n    //   setTouched({\n    //     name: true,\n    //     email: true,\n    //     password: true,\n    //     confirmPassword: true,\n    //     IsAccepted: false,\n    //   });\n    // }\n    console.log(\"added succesfully\");\n  };\n\n  return (\n    <div className={styles.container}>\n      <form\n        className={styles.formLogin}\n        onSubmit={submitHandler}\n        autoComplete=\"off\"\n      >\n        <center>\n          <img src={logo} alt=\"logo1\" height=\"70px\" width=\"160px\" />{\" \"}\n          <img src={alogo} alt=\"logo2\" height=\"90px\" width=\"140px\" />\n        </center>\n        <br />\n        <h2>Sign Up</h2>\n        <div>\n          <div\n            className={\n              errors.name && touched.name\n                ? styles.unCompleted\n                : !errors.name && touched.name\n                ? styles.completed\n                : undefined\n            }\n          >\n            <input\n              type=\"text\"\n              name=\"name\"\n              value={data.name}\n              placeholder=\"Name\"\n              onChange={changeHandler}\n              onFocus={focusHandler}\n              autoComplete=\"off\"\n            />\n            <img src={userIcon} alt=\"\" />\n          </div>\n          {errors.name && touched.name && (\n            <span className={styles.error}>{errors.name}</span>\n          )}\n        </div>\n        <div>\n          <div\n            className={\n              errors.email && touched.email\n                ? styles.unCompleted\n                : !errors.email && touched.email\n                ? styles.completed\n                : undefined\n            }\n          >\n            <input\n              type=\"text\"\n              name=\"email\"\n              value={data.email}\n              placeholder=\"E-mail\"\n              onChange={changeHandler}\n              onFocus={focusHandler}\n              autoComplete=\"off\"\n            />\n            <img src={emailIcon} alt=\"\" />\n          </div>\n          {errors.email && touched.email && (\n            <span className={styles.error}>{errors.email}</span>\n          )}\n        </div>\n        <div>\n          <div\n            className={\n              errors.password && touched.password\n                ? styles.unCompleted\n                : !errors.password && touched.password\n                ? styles.completed\n                : undefined\n            }\n          >\n            <input\n              type=\"password\"\n              name=\"password\"\n              value={data.password}\n              placeholder=\"Password\"\n              onChange={changeHandler}\n              onFocus={focusHandler}\n              autoComplete=\"off\"\n            />\n            <img src={passwordIcon} alt=\"\" />\n          </div>\n          {errors.password && touched.password && (\n            <span className={styles.error}>{errors.password}</span>\n          )}\n        </div>\n        <div>\n          <div\n            className={\n              errors.confirmPassword && touched.confirmPassword\n                ? styles.unCompleted\n                : !errors.confirmPassword && touched.confirmPassword\n                ? styles.completed\n                : !errors.confirmPassword && touched.confirmPassword\n                ? styles.completed\n                : undefined\n            }\n          >\n            <input\n              type=\"password\"\n              name=\"confirmPassword\"\n              value={data.confirmPassword}\n              placeholder=\"Confirm Password\"\n              onChange={changeHandler}\n              onFocus={focusHandler}\n              autoComplete=\"off\"\n            />\n            <img src={passwordIcon} alt=\"\" />\n          </div>\n          {errors.confirmPassword && touched.confirmPassword && (\n            <span className={styles.error}>{errors.confirmPassword}</span>\n          )}\n        </div>\n        <div>\n          <div className={styles.terms}>\n            <input\n              type=\"checkbox\"\n              name=\"IsAccepted\"\n              value={data.IsAccepted}\n              id=\"accept\"\n              onChange={changeHandler}\n              onFocus={focusHandler}\n            />\n            <label htmlFor=\"accept\">I accept terms of privacy policy</label>\n          </div>\n          {errors.IsAccepted && touched.IsAccepted && (\n            <span className={styles.error}>{errors.IsAccepted}</span>\n          )}\n        </div>\n        <div>\n          <button type=\"submit\">Create Account</button>\n          <span\n            style={{\n              color: \"#a29494\",\n              textAlign: \"center\",\n              display: \"inline-block\",\n              width: \"100%\",\n            }}\n          >\n            Already have a account? <Link to=\"/login\">Sign In</Link>\n          </span>\n        </div>\n      </form>\n      <ToastContainer />\n    </div>\n  );\n};\n\nexport default SignUp;\n","/Users/keyakhandelwal/Documents/react-login-1/ffront/src/components/toast.js",[],"/Users/keyakhandelwal/Documents/react-login-1/ffront/src/components/validate.js",[],{"ruleId":"36","replacedBy":"37"},{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","severity":1,"message":"41","line":5,"column":26,"nodeType":"42","messageId":"43","endLine":5,"endColumn":31},{"ruleId":"40","severity":1,"message":"44","line":7,"column":10,"nodeType":"42","messageId":"43","endLine":7,"endColumn":16},{"ruleId":"40","severity":1,"message":"45","line":9,"column":8,"nodeType":"42","messageId":"43","endLine":9,"endColumn":13},{"ruleId":"40","severity":1,"message":"41","line":14,"column":26,"nodeType":"42","messageId":"43","endLine":14,"endColumn":31},{"ruleId":"40","severity":1,"message":"44","line":15,"column":10,"nodeType":"42","messageId":"43","endLine":15,"endColumn":16},{"ruleId":"40","severity":1,"message":"45","line":19,"column":8,"nodeType":"42","messageId":"43","endLine":19,"endColumn":13},"no-native-reassign",["46"],"no-negated-in-lhs",["47"],"no-unused-vars","'toast' is defined but never used.","Identifier","unusedVar","'notify' is defined but never used.","'axios' is defined but never used.","no-global-assign","no-unsafe-negation"]